 Estrutura de dados - 17/09
 
 Arquivos - Abertura/Fechamento:
 
 - File *fopen(char *nome, char *modo);
 - int fclose (File *fp);
 
 Arq texto:
 
 int fscanf(Fide *fp, char *modo, <END_VAR>);
 int fprintf(File *fp, char *modo, <LISTA_VAR>);
 
 Merge de dois arquivos texto ordenados:
 
    | 2 | | 1 |
    | 4 | | 3 |
    | 5 | | 8 |
    | 7 |
    | 8 |
    
        |
        |
        
     | 1 |
     | 2 |
     | 3 |
     | 4 |
     | 5 |
     | 6 |
     | 7 |
     | 8 |
     
------------------------------- // ----------------------------------

void merge (char *arg1, char *arg2, char *saida){

    FILE *fp1 = fopen(arq1, "rt"),
         *fp2 = fopen(arq2, "rt"),
         *out = fopen(saida, "wt");
         
    if((!fp1) || (!fp2) || (!fp3)) exit 1;
    
    int r1, r2, n1, n2;
    r1 = fscanf( fp1, "%d", &n1); //retorna o numero de variaveis lidas com sucesso
    r2 = fscanf( fp2, "%d", &n2); //retorna o numero de variaveis lidas com sucesso

    while (r1 || r2){
    
        if((r1) || (n2 < n1)){
        
            fprinf(out, "%d\n", n2);
            r2 = fscanf(f2,"%d",&n2);
            
        }else if((!r2) || (n1 < n2)){
        
            fprintf(out, "%d\n", n1);
            r1 = fscanf(fp1, "%d",&n1);
            
        }else{
        
            fprintf (out, "%d\n", n1);
            r1 = fscanf(fp1,"%d",%n1);
            r2 = fscanf(fp2,"%d", %n2);
            
        }
    }
    
    fclose(fp1);
    fclose(fp2);
    fclose(out);
}

------------------------------- // ----------------------------------

int conta (char *s, char *arq){
    
    char *fp = fopen(arq, "rt");
    if(!fp) exit 1;
    
    int i, r, resp = 0;
    char c;
    
    r = fscanf(fp, " %c",%c); //retorna o numero de variaveis lidas com sucesso
    
    if((r==1) && (c == s[1])) i = 2;
    else i = 0;
    
    while (r==1){
    
        if(c == s[i]) i++;
        else i = 0;
        if(s[i] == "\0"){
            resp++;
            i = 0;
        }else r = fscanf(" %c", %c);
        
    }
    
    if(s[i] == " ") resp++;
    fclose(fp);
    return resp;
    
}

------------------------------- // ----------------------------------

